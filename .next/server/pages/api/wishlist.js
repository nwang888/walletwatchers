"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/wishlist";
exports.ids = ["pages/api/wishlist"];
exports.modules = {

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "sqlite":
/*!*************************!*\
  !*** external "sqlite" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("sqlite");;

/***/ }),

/***/ "(api)/./src/pages/api/wishlist.js":
/*!***********************************!*\
  !*** ./src/pages/api/wishlist.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sqlite3 */ \"sqlite3\");\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sqlite */ \"sqlite\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sqlite__WEBPACK_IMPORTED_MODULE_1__]);\nsqlite__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function getWishlistData({ sort_by =\"wishlist_id\" , order =\"ASC\" , page =1 , rowsPerPage =10 , paginate =true  }) {\n    const db = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n        filename: \"./sql/big.db\",\n        driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n    });\n    const totalRows = await db.get(`SELECT COUNT(*) as count\n\t\tFROM Wishlists`);\n    console.log(\"page \", page);\n    let wishlists1;\n    if (paginate) {\n        console.log(\"page in paginate: \", page);\n        console.log(\"rowsPerPage: \", rowsPerPage);\n        const offset = (page - 1) * rowsPerPage;\n        console.log(\"offset: \", offset);\n        wishlists1 = await db.all(`SELECT * FROM Wishlists \n                                    ORDER BY liked DESC, wishlist_id ${order}\n                                    LIMIT ? OFFSET ?`, [\n            rowsPerPage,\n            offset\n        ]);\n    } else {\n        wishlists1 = await db.all(`SELECT * FROM Wishlists \n                                         ORDER BY ${sort_by} ${order}\n                                        `);\n    }\n    await db.close();\n    // console.log(wishlists);\n    console.log(totalRows);\n    return {\n        wishlists: wishlists1,\n        totalRows: totalRows.count\n    };\n}\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        try {\n            const { sort_by , order , page , rowsPerPage , paginate  } = req.query;\n            console.log(\"page before passing: \", page);\n            const db = await getWishlistData({\n                sort_by,\n                order,\n                page,\n                rowsPerPage,\n                paginate\n            });\n            return res.status(200).json(db);\n        } catch (err) {\n            return res.status(500).json({\n                error: \"Error fetching wishlists data\"\n            });\n        }\n    } else if (req.method === \"POST\") {\n        console.log(\"posting!\");\n        console.log(req.body);\n        try {\n            const db1 = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n                filename: \"./sql/big.db\",\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n            });\n            const requestData = req.body; // Access data sent in the request body\n            // res.json({ message: \"Data received successfully\", data: requestData });\n            console.log(requestData);\n            const wishlist_id = Math.floor(Math.random);\n            const liked = 0;\n            console.log(requestData.wishlist_id);\n            await db1.run(`\n                INSERT INTO Wishlists (wishlist_id, item_name, item_price, liked)\n                VALUES (?, ?, ?, ?)\n                `, [\n                wishlist_id,\n                requestData.name,\n                requestData.price,\n                liked\n            ]);\n            console.log(\"added\");\n            await db1.close();\n            res.json({\n                message: \"Table: \",\n                data: requestData\n            });\n            return res.status(200).json(payload);\n        } catch (err1) {\n            return res.status(500).json({\n                error: err1.message\n            });\n        }\n    } else if (req.method === \"DELETE\") {\n        console.log(\"deleted\");\n        const { id  } = req.query;\n        try {\n            const db2 = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n                filename: \"./sql/big.db\",\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n            });\n            await db2.run(`\n                DELETE FROM wishlists\n                WHERE wishlist_id = ?\n            `, [\n                id\n            ]);\n            await db2.close();\n            res.status(200).json({\n                message: `Item with id ${id} deleted.`\n            });\n        } catch (err2) {\n            res.status(500).json({\n                error: err2.message\n            });\n        }\n    }\n    if (req.method === \"PUT\") {\n        console.log(\"liked\");\n        const { id: id1  } = req.query;\n        try {\n            const db3 = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n                filename: \"./sql/big.db\",\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n            });\n            const likedStatus = await db3.get(`SELECT liked as likedStatus\n            FROM Wishlists\n            WHERE wishlist_id = ?`, [\n                id1\n            ]);\n            if (likedStatus.likedStatus == 0) {\n                await db3.run(\"UPDATE wishlists SET liked = 1 WHERE wishlist_id = ?\", [\n                    id1\n                ]);\n            } else if (likedStatus.likedStatus == 1) {\n                await db3.run(\"UPDATE wishlists SET liked = 0 WHERE wishlist_id = ?\", [\n                    id1\n                ]);\n            }\n            await db3.close();\n            return res.status(200).json(wishlists);\n        } catch (err3) {\n            res.status(500).json({\n                error: err3.message\n            });\n        }\n    }\n    if (req.method === \"HEAD\") {\n        try {\n            const db4 = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n                filename: \"./sql/big.db\",\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n            });\n            const page1 = req.query.page ? parseInt(req.query.page) : 1;\n            const recordsPerPage = 10;\n            const offset = (page1 - 1) * recordsPerPage;\n            const wishlists1 = await db4.all(`SELECT * FROM wishlists ORDER BY liked DESC LIMIT ? OFFSET ?`, [\n                recordsPerPage,\n                offset\n            ]);\n            console.log(wishlists1);\n            await db4.close();\n            return res.status(200).json(wishlists1);\n        } catch (err4) {\n            return res.status(500).json({\n                error: err4.message\n            });\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/wishlist.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/wishlist.js"));
module.exports = __webpack_exports__;

})();